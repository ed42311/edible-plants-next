{"ast":null,"code":"var _jsxFileName = \"/Users/contextcue/code/edible-plants/pages/_document.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from 'react';\nimport { ServerStyleSheets } from '@material-ui/core/styles';\nimport Document, { Head, Main, NextScript } from 'next/document';\nimport theme from '../styles/theme';\nexport default class MyDocument extends Document {\n  static async getInitialProps(ctx) {\n    const materialUISheet = new ServerStyleSheets();\n    const originalRenderPage = ctx.renderPage;\n\n    try {\n      ctx.renderPage = () => originalRenderPage({\n        enhanceApp: App => props => materialUISheet.collect(__jsx(App, _extends({}, props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14\n          },\n          __self: this\n        })))\n      });\n\n      const initialProps = await Document.getInitialProps(ctx);\n      return _objectSpread({}, initialProps, {\n        styles: __jsx(React.Fragment, null, initialProps.styles, materialUISheet.getStyleElement())\n      }); // eslint-disable-next-line no-empty\n    } finally {}\n  }\n\n  render() {\n    return __jsx(\"html\", {\n      lang: \"en\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, __jsx(Head, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, __jsx(\"meta\", {\n      charSet: \"utf-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), __jsx(\"meta\", {\n      name: \"viewport\",\n      content: \"minimum-scale=1, initial-scale=1, width=device-width, shrink-to-fit=no\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), __jsx(\"meta\", {\n      name: \"theme-color\",\n      content: theme.palette.primary.main,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), __jsx(\"link\", {\n      rel: \"stylesheet\",\n      href: \"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })), __jsx(\"body\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, __jsx(Main, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), __jsx(NextScript, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/contextcue/code/edible-plants/pages/_document.tsx"],"names":["React","ServerStyleSheets","Document","Head","Main","NextScript","theme","MyDocument","getInitialProps","ctx","materialUISheet","originalRenderPage","renderPage","enhanceApp","App","props","collect","initialProps","styles","getStyleElement","render","palette","primary","main"],"mappings":";;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,iBAAT,QAAkC,0BAAlC;AACA,OAAOC,QAAP,IAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,UAA/B,QAAiD,eAAjD;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,eAAe,MAAMC,UAAN,SAAyBL,QAAzB,CAAkC;AAC/C,eAAaM,eAAb,CAA6BC,GAA7B,EAAkC;AAChC,UAAMC,eAAe,GAAG,IAAIT,iBAAJ,EAAxB;AACA,UAAMU,kBAAkB,GAAGF,GAAG,CAACG,UAA/B;;AAEA,QAAI;AACFH,MAAAA,GAAG,CAACG,UAAJ,GAAiB,MACfD,kBAAkB,CAAC;AACjBE,QAAAA,UAAU,EAAEC,GAAG,IAAIC,KAAK,IACtBL,eAAe,CAACM,OAAhB,CAAwB,MAAC,GAAD,eAASD,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAxB;AAFe,OAAD,CADpB;;AAMA,YAAME,YAAY,GAAG,MAAMf,QAAQ,CAACM,eAAT,CAAyBC,GAAzB,CAA3B;AACA,+BACKQ,YADL;AAEEC,QAAAA,MAAM,EACJ,4BACGD,YAAY,CAACC,MADhB,EAEGR,eAAe,CAACS,eAAhB,EAFH;AAHJ,SARE,CAiBF;AACD,KAlBD,SAkBU,CACT;AACF;;AACDC,EAAAA,MAAM,GAAgB;AACpB,WACE;AAAM,MAAA,IAAI,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,OAAO,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,OAAO,EAAC,wEAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAOE;AAAM,MAAA,IAAI,EAAC,aAAX;AAAyB,MAAA,OAAO,EAAEd,KAAK,CAACe,OAAN,CAAcC,OAAd,CAAsBC,IAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,EAQE;AACE,MAAA,GAAG,EAAC,YADN;AAEE,MAAA,IAAI,EAAC,6EAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADF,EAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAdF,CADF;AAqBD;;AAhD8C","sourcesContent":["import * as React from 'react'\nimport { ServerStyleSheets } from '@material-ui/core/styles'\nimport Document, { Head, Main, NextScript } from 'next/document'\nimport theme from '../styles/theme'\nexport default class MyDocument extends Document {\n  static async getInitialProps(ctx) {\n    const materialUISheet = new ServerStyleSheets()\n    const originalRenderPage = ctx.renderPage\n\n    try {\n      ctx.renderPage = () =>\n        originalRenderPage({\n          enhanceApp: App => props =>\n            materialUISheet.collect(<App {...props} />),\n        })\n\n      const initialProps = await Document.getInitialProps(ctx)\n      return {\n        ...initialProps,\n        styles: (\n          <>\n            {initialProps.styles}\n            {materialUISheet.getStyleElement()}\n          </>\n        ),\n      }\n      // eslint-disable-next-line no-empty\n    } finally {\n    }\n  }\n  render(): JSX.Element {\n    return (\n      <html lang=\"en\">\n        <Head>\n          <meta charSet=\"utf-8\" />\n          <meta\n            name=\"viewport\"\n            content=\"minimum-scale=1, initial-scale=1, width=device-width, shrink-to-fit=no\"\n          />\n          {/* PWA primary color */}\n          <meta name=\"theme-color\" content={theme.palette.primary.main} />\n          <link\n            rel=\"stylesheet\"\n            href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\"\n          />\n        </Head>\n        <body>\n          <Main />\n          <NextScript />\n        </body>\n      </html>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}